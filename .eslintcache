[{"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\index.js":"1","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\reportWebVitals.js":"2","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\App.js":"3","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\Buttons.js":"4","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\AngryButton.js":"5","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\CounterButton.js":"6","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\LightSwitchButton.js":"7","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\TextRepeaterButton.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":803,"mtime":1608422407160,"results":"12","hashOfConfig":"10"},{"size":142,"mtime":1608254642172,"results":"13","hashOfConfig":"10"},{"size":574,"mtime":1608335451939,"results":"14","hashOfConfig":"10"},{"size":435,"mtime":1608335464834,"results":"15","hashOfConfig":"10"},{"size":584,"mtime":1608422316884,"results":"16","hashOfConfig":"10"},{"size":561,"mtime":1608335766846,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gi1nz9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\index.js",[],["40","41"],"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\reportWebVitals.js",[],"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\App.js",[],"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\Buttons.js",["42"],"import {useState} from 'react'\r\n\r\n\r\nfunction Buttons(props){\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons",["43","44"],"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\AngryButton.js",[],"C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\CounterButton.js",["45"],"import { useState } from \"react\";\r\n\r\nfunction CounterButton(props){\r\n    const [clickAmount, setClickAmount] = useState(0)\r\n    const count = 0  //back up\r\n\r\n\r\n    const handleClick = function(){\r\n        setClickAmount(clickAmount + 1)\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleClick}  className=\"AngryButton\">\r\n            You clicked me {clickAmount} times\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default CounterButton","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\LightSwitchButton.js",["46"],"import { useState } from \"react\";\r\n\r\nfunction LightSwitchButton(props){\r\n    //const [light, setLight] = useState(\"off\")\r\n\r\n    const light = props.light\r\n    const switchLight = props.switchLight\r\n\r\n    const handleClick = function(){\r\n        switchLight()\r\n    }\r\n    \r\n    return (\r\n        <button onClick={handleClick}  className=\"LightSwitchButton\">\r\n            {light === \"on\" && <span className=\"on\"><i>ðŸ’¡</i>I'm on</span>}\r\n            {light === \"off\" && <span className=\"off\"><i>ðŸ’¡</i>I'm off</span>}\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default LightSwitchButton","C:\\Users\\rocks\\Desktop\\lighthouse\\tweeter-react\\fancy-buttons\\src\\components\\TextRepeaterButton.js",["47"],"import { useState } from \"react\";\r\n\r\nfunction TextRepeaterButton(props){\r\n    const [repetitions, setRepetitions] = useState(1)\r\n    const textArray = []\r\n    const textAmount = 10; //back up\r\n\r\n\r\n    for (let i = 0; i < repetitions; i++){\r\n        textArray.push(<span key={i}>I like this text</span>)\r\n    }\r\n\r\n    const handleClick = function(){setRepetitions(repetitions + 1)}\r\n\r\n    return (\r\n        <button onClick={handleClick}  className=\"TextRepeaterButton\">\r\n            {textArray}\r\n        </button>\r\n    )\r\n\r\n}\r\n\r\nexport default TextRepeaterButton",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":9,"nodeType":"54","messageId":"55","endLine":1,"endColumn":17},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","severity":1,"message":"58","line":5,"column":11,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":18},{"ruleId":"52","severity":1,"message":"59","line":6,"column":11,"nodeType":"54","messageId":"55","endLine":6,"endColumn":21},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["60"],["61"],"'count' is assigned a value but never used.","'textAmount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]